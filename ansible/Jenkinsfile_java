//  Pipeline to deploy Java application in remote server

def app_name = "abc"
def BRANCH = "${params.appBRANCH}"
def ENV = "${params.appENV}"
//def Config_File_Path_S3 =  "kundrupu/java/${app_name}/${env}/config"
//def Key_File_Path_S3  = "kundrupu/java/${app_name}/${env}/keys" In case ssh with pem key
def git_url = "git@github.com:arundevops16/abc.git"

pipeline {
    agent any
        parameters {
    string(
        name: 'appBRANCH',  
        defaultValue: "development",
        description: 'Write down your Tag/Branch to be deployed' )
     choice(
        name: 'appENV',
        choices: ['development', 'staging'],
        description: 'Pick the environment to build')
    }
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: "*/${BRANCH}"]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'devops']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: "${git_url}"]]])
            }
        }        
        stage('Build Artifact') {
            steps {
                sh 'mvn -Dmaven.test.failure.ignore=false clean install'
//                sh 'sudo chown devops target/*.jar'
            }
        }
    
        // This is to fetch env specifc property file from s3 or any repository
//        stage('Property'){
//            steps{   
//                sh "aws s3 cp s3://${Config_File_Path_S3}/env ${WORKSPACE}/${app_name}/ansible/roles/artifacts-deployment/files/env" 
//            }
//        }

        // We are deploying the latest code on the servers
//        stage('Deploying Code and config on Servers'){
//            steps {  
//              sh "ansible-playbook -i ${WORKSPACE}/ansible/hosts ${WORKSPACE}/ansible/${app_name}/java.yml -u devops -e app_name=${app_name} -e env=${env} -e WORKSPACE=${WORKSPACE}"
//            }
//        }

    }
}
